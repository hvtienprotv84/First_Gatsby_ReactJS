{"version":3,"file":"730a8bd782e050fc37bbb373f186ecef55b9fac4-d7702e6dee38f659b05e.js","mappings":"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","sources":["webpack://my-portfolio/./node_modules/tiny-skeleton-loader-react/dist/index.es.js","webpack://my-portfolio/./node_modules/gatsby-theme-portfolio-minimal/src/sections/About/data.tsx","webpack://my-portfolio/./node_modules/gatsby-theme-portfolio-minimal/src/sections/About/style.module.css","webpack://my-portfolio/./node_modules/gatsby-theme-portfolio-minimal/src/sections/About/index.tsx","webpack://my-portfolio/./node_modules/gatsby-theme-portfolio-minimal/src/components/Button/style.module.css","webpack://my-portfolio/./node_modules/gatsby-theme-portfolio-minimal/src/components/Button/index.tsx","webpack://my-portfolio/./node_modules/gatsby-theme-portfolio-minimal/src/sections/Interests/data.tsx","webpack://my-portfolio/./node_modules/gatsby-theme-portfolio-minimal/src/sections/Interests/style.module.css","webpack://my-portfolio/./node_modules/gatsby-theme-portfolio-minimal/src/sections/Interests/index.tsx","webpack://my-portfolio/./node_modules/gatsby-theme-portfolio-minimal/src/sections/Contact/data.tsx","webpack://my-portfolio/./node_modules/gatsby-theme-portfolio-minimal/src/sections/Contact/style.module.css","webpack://my-portfolio/./node_modules/gatsby-theme-portfolio-minimal/src/sections/Contact/index.tsx","webpack://my-portfolio/./node_modules/gatsby-theme-portfolio-minimal/src/sections/Legal/data.tsx","webpack://my-portfolio/./node_modules/gatsby-theme-portfolio-minimal/src/sections/Legal/index.tsx"],"sourcesContent":["import React from 'react';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nfunction styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \".styles_skeleton__tyzRD{background:#eff1f6;display:inline-block;line-height:1;overflow:hidden;position:relative}.styles_skeleton__tyzRD:before{animation:styles_skeleton-progress__aezri 1.2s ease-in-out infinite;background-image:linear-gradient(90deg,hsla(0,0%,100%,0),hsla(0,0%,100%,.6),hsla(0,0%,100%,0));content:\\\"\\\";height:100%;left:-500px;position:absolute;top:0;width:500px}@keyframes styles_skeleton-progress__aezri{0%{left:-500px}to{left:100%}}\";\nvar css = {\"skeleton\":\"styles_skeleton__tyzRD\",\"skeleton-progress\":\"styles_skeleton-progress__aezri\"};\nstyleInject(css_248z);\n\nfunction SkeletonLoader(_a) {\r\n    var _b = _a.width, width = _b === void 0 ? \"100%\" : _b, _c = _a.height, height = _c === void 0 ? \"1em\" : _c, _d = _a.background, background = _d === void 0 ? \"#E9ECEF\" : _d, _e = _a.radius, radius = _e === void 0 ? \"4px\" : _e, _f = _a.circle, circle = _f === void 0 ? false : _f, _g = _a.block, block = _g === void 0 ? true : _g, _h = _a.style, style = _h === void 0 ? {} : _h, _j = _a.as, Tag = _j === void 0 ? \"div\" : _j;\r\n    return (React.createElement(Tag, { className: css.skeleton, style: __assign({ width: width, height: height, background: background, borderRadius: circle ? \"50%\" : radius, display: block ? \"block\" : \"inline-block\" }, style) }, \"\\u200C\"));\r\n}\n\nexport { SkeletonLoader as default };\n//# sourceMappingURL=index.es.js.map\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\n\ninterface AboutSectionQueryResult {\n    allAboutMarkdown: {\n        sections: {\n            frontmatter: {\n                imageAlt?: string;\n                imageSrc?: {\n                    childImageSharp: {\n                        gatsbyImageData: IGatsbyImageData;\n                    };\n                };\n            };\n            html: string;\n        }[];\n    };\n}\n\nexport const useLocalDataSource = (): AboutSectionQueryResult => {\n    return useStaticQuery(graphql`\n        query AboutSectionQuery {\n            allAboutMarkdown: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/sections/about/\" } }) {\n                sections: nodes {\n                    frontmatter {\n                        imageAlt\n                        imageSrc {\n                            childImageSharp {\n                                gatsbyImageData(width: 400)\n                            }\n                        }\n                    }\n                    html\n                }\n            }\n        }\n    `);\n};\n","// extracted by mini-css-extract-plugin\nexport var About = \"style-module--About--0f660\";\nexport var Description = \"style-module--Description--2e019\";\nexport var Image = \"style-module--Image--57f3b\";\nexport var ImageWrapper = \"style-module--ImageWrapper--a41ba\";","import React from 'react';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport { Animation } from '../../components/Animation';\nimport { Section } from '../../components/Section';\nimport { useLocalDataSource } from './data';\nimport { PageSection } from '../../types';\nimport * as classes from './style.module.css';\n\nexport function AboutSection(props: PageSection): React.ReactElement {\n    const response = useLocalDataSource();\n    const data = response.allAboutMarkdown.sections[0];\n\n    return (\n        <Animation type=\"fadeUp\">\n            <Section anchor={props.sectionId} heading={props.heading}>\n                <div className={classes.About}>\n                    <div className={classes.Description} dangerouslySetInnerHTML={{ __html: data.html }} />\n                    {data.frontmatter.imageSrc && (\n                        <Animation type=\"fadeLeft\" delay={200}>\n                            <div className={classes.ImageWrapper}>\n                                <GatsbyImage\n                                    image={data.frontmatter.imageSrc.childImageSharp.gatsbyImageData}\n                                    className={classes.Image}\n                                    alt={data.frontmatter.imageAlt || `About Image`}\n                                />\n                            </div>\n                        </Animation>\n                    )}\n                </div>\n            </Section>\n        </Animation>\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport var Button = \"style-module--Button--82b1f\";","import React from 'react';\nimport { Link } from 'gatsby';\nimport * as classes from './style.module.css';\n\nexport enum ButtonType {\n    BUTTON = 'button',\n    SUBMIT = 'submit',\n    LINK = 'link',\n}\n\ninterface ButtonProps {\n    type: ButtonType;\n    label: string;\n    id?: string;\n    url?: string;\n    externalLink?: boolean;\n    onClickHandler?: () => void;\n}\n\nexport function Button(props: ButtonProps): React.ReactElement {\n    if (props.type === ButtonType.LINK) {\n        if (!props.url) {\n            throw new Error(`Button should be a ${props.type} but no URL is given!`);\n        } else {\n            if (props.externalLink) {\n                return (\n                    <a\n                        id={props.id}\n                        className={classes.Button}\n                        href={props.url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        aria-label=\"External Link\"\n                    >\n                        {props.label}\n                    </a>\n                );\n            } else {\n                return (\n                    <Link id={props.id} to={props.url} className={classes.Button}>\n                        {props.label}\n                    </Link>\n                );\n            }\n        }\n    } else if (props.type === ButtonType.BUTTON || props.type === ButtonType.SUBMIT) {\n        if (!props.onClickHandler) {\n            throw new Error(`Button should be a ${props.type} but no onClickHandler is given!`);\n        }\n        return (\n            <button id={props.id} className={classes.Button} type={props.type} onClick={props.onClickHandler}>\n                {props.label}\n            </button>\n        );\n    } else {\n        throw new Error(`Unknown button type specified.`);\n    }\n}\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { ImageObject } from '../../types';\n\ninterface InterestsSectionQueryResult {\n    allInterestsJson: {\n        sections: {\n            button: {\n                initiallyShownInterests: number;\n                label: string;\n                visible: boolean;\n            };\n            interests: {\n                image: ImageObject;\n                label: string;\n            }[];\n        }[];\n    };\n}\n\nexport const useLocalDataSource = (): InterestsSectionQueryResult => {\n    return useStaticQuery(graphql`\n        query InterestsSectionQuery {\n            allInterestsJson {\n                sections: nodes {\n                    button {\n                        initiallyShownInterests\n                        label\n                        visible\n                    }\n                    interests {\n                        image {\n                            alt\n                            src {\n                                childImageSharp {\n                                    gatsbyImageData(width: 20, height: 20)\n                                }\n                            }\n                            objectFit\n                        }\n                        label\n                    }\n                }\n            }\n        }\n    `);\n};\n","// extracted by mini-css-extract-plugin\nexport var Icon = \"style-module--Icon--4b6f8\";\nexport var Interest = \"style-module--Interest--4bfd4\";\nexport var Interests = \"style-module--Interests--3d3b3\";","import React from 'react';\nimport { Animation } from '../../components/Animation';\nimport { Section } from '../../components/Section';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport { Button, ButtonType } from '../../components/Button';\nimport { PageSection } from '../../types';\nimport { useLocalDataSource } from './data';\nimport * as classes from './style.module.css';\n\nexport function InterestsSection(props: PageSection): React.ReactElement {\n    const response = useLocalDataSource();\n    const data = response.allInterestsJson.sections[0];\n    const shouldShowButton = data.button.visible !== false;\n    const initiallyShownInterests = data.button.initiallyShownInterests ?? 5;\n    const [shownInterests, setShownInterests] = React.useState<number>(\n        shouldShowButton ? initiallyShownInterests : data.interests.length,\n    );\n\n    function loadMoreHandler() {\n        setShownInterests(data.interests.length);\n    }\n\n    return (\n        <Animation type=\"fadeUp\">\n            <Section anchor={props.sectionId} heading={props.heading}>\n                <div className={classes.Interests}>\n                    {data.interests.slice(0, shownInterests).map((interest, key) => {\n                        return (\n                            <Animation key={key} className={classes.Interest} type=\"scaleIn\" delay={key * 100}>\n                                {interest.image.src && (\n                                    <GatsbyImage\n                                        image={interest.image.src.childImageSharp.gatsbyImageData}\n                                        className={classes.Icon}\n                                        alt={interest.image.alt || `Interest ${interest.label}`}\n                                    />\n                                )}{' '}\n                                {interest.label}\n                            </Animation>\n                        );\n                    })}\n                    {shouldShowButton && shownInterests < data.interests.length && (\n                        <Animation type=\"scaleIn\" delay={(shownInterests + 1) * 100}>\n                            <Button\n                                type={ButtonType.BUTTON}\n                                onClickHandler={loadMoreHandler}\n                                label={data.button.label}\n                            />\n                        </Animation>\n                    )}\n                </div>\n            </Section>\n        </Animation>\n    );\n}\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { SocialProfile } from '../../components/SocialProfiles';\nimport { ImageObject } from '../../types';\n\ninterface ContactSectionQueryResult {\n    allContactJson: {\n        sections: {\n            description: string;\n            email: string;\n            image: ImageObject;\n            name: string;\n            socialProfiles: {\n                from: SocialProfile[];\n                showIcons: boolean;\n            };\n        }[];\n    };\n}\n\nexport const useLocalDataSource = (): ContactSectionQueryResult => {\n    return useStaticQuery(graphql`\n        query ContactSectionQuery {\n            allContactJson {\n                sections: nodes {\n                    description\n                    email\n                    image {\n                        alt\n                        src {\n                            childImageSharp {\n                                gatsbyImageData(width: 140)\n                            }\n                        }\n                        objectFit\n                    }\n                    name\n                    socialProfiles {\n                        from\n                        showIcons\n                    }\n                }\n            }\n        }\n    `);\n};\n","// extracted by mini-css-extract-plugin\nexport var Avatar = \"style-module--Avatar--fda4c\";\nexport var Contact = \"style-module--Contact--1c6f8\";\nexport var ContactDetails = \"style-module--ContactDetails--70da4\";\nexport var Description = \"style-module--Description--87aea\";\nexport var Name = \"style-module--Name--8248f\";\nexport var Profile = \"style-module--Profile--3b0af\";","import React from 'react';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport { Animation } from '../../components/Animation';\nimport { Section } from '../../components/Section';\nimport { SocialProfiles } from '../../components/SocialProfiles';\nimport { useLocalDataSource } from './data';\nimport { PageSection } from '../../types';\nimport * as classes from './style.module.css';\n\nexport function ContactSection(props: PageSection): React.ReactElement {\n    const response = useLocalDataSource();\n    const data = response.allContactJson.sections[0];\n\n    return (\n        <Animation type=\"fadeUp\">\n            <Section anchor={props.sectionId} heading={props.heading} additionalClasses={[classes.Contact]}>\n                {data.description && <p className={classes.Description}>{data.description}</p>}\n                <div className={classes.Profile}>\n                    {data.image.src && (\n                        <GatsbyImage\n                            className={classes.Avatar}\n                            image={data.image.src.childImageSharp.gatsbyImageData}\n                            alt={data.image.alt || `Profile ${data.name}`}\n                        />\n                    )}\n                    <div className={classes.ContactDetails}>\n                        <div className={classes.Name}>{data.name}</div>\n                        <u>\n                            <a href={`mailto:${data.email}`}>{data.email}</a>\n                        </u>\n                    </div>\n                </div>\n                {data.socialProfiles && (\n                    <SocialProfiles from={data.socialProfiles.from} showIcon={data.socialProfiles.showIcons} />\n                )}\n            </Section>\n        </Animation>\n    );\n}\n","import { graphql, useStaticQuery } from 'gatsby';\n\ninterface LegalSection {\n    html: string;\n    frontmatter: {\n        sectionId: string;\n    };\n}\n\nexport interface LegalSectionQueryResult {\n    allLegalSection: {\n        sections: LegalSection[];\n    };\n}\n\nexport const useLocalDataSource = (): LegalSectionQueryResult => {\n    return useStaticQuery(graphql`\n        query LegalSectionQuery {\n            allLegalSection: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/sections/legal/\" } }) {\n                sections: nodes {\n                    html\n                    frontmatter {\n                        sectionId\n                    }\n                }\n            }\n        }\n    `);\n};\n\nexport const getSectionBySectionId = (res: LegalSectionQueryResult, id: string): LegalSection => {\n    const sectionList = res.allLegalSection.sections.filter((section) => section.frontmatter.sectionId === id);\n    if (sectionList.length === 0) {\n        throw new Error(`Could not find section ${id} by id.`);\n    } else if (sectionList.length > 1) {\n        throw new Error(`Found section ${id} multiple times. Make sure the id is unique.`);\n    } else {\n        return sectionList[0];\n    }\n};\n","import React from 'react';\nimport { Section } from '../../components/Section';\nimport { PageSection } from '../../types';\nimport { getSectionBySectionId, useLocalDataSource } from './data';\n\nexport function LegalSection(props: PageSection): React.ReactElement {\n    const response = useLocalDataSource();\n    const data = getSectionBySectionId(response, props.sectionId);\n\n    return (\n        <Section anchor={props.sectionId} heading={props.heading}>\n            <div dangerouslySetInnerHTML={{ __html: data.html }} />\n        </Section>\n    );\n}\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","styleInject","useLocalDataSource","useStaticQuery","About","Description","Image","ImageWrapper","AboutSection","props","data","allAboutMarkdown","sections","React","Animation","Section","anchor","sectionId","heading","className","classes","dangerouslySetInnerHTML","__html","html","frontmatter","imageSrc","delay","GatsbyImage","image","childImageSharp","gatsbyImageData","alt","imageAlt","ButtonType","Button","LINK","url","externalLink","id","href","target","rel","label","Link","to","Error","BUTTON","SUBMIT","onClickHandler","onClick","Interest","Interests","InterestsSection","_data$button$initiall","allInterestsJson","shouldShowButton","button","visible","initiallyShownInterests","shownInterests","setShownInterests","interests","length","slice","map","interest","key","src","Avatar","Contact","ContactDetails","Name","Profile","ContactSection","allContactJson","additionalClasses","description","name","email","socialProfiles","SocialProfiles","from","showIcon","showIcons","getSectionBySectionId","res","sectionList","allLegalSection","filter","section","LegalSection","response"],"sourceRoot":""}